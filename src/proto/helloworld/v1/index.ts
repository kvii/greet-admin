// Code generated by protoc-gen-typescript-http. DO NOT EDIT.
/* eslint-disable camelcase */
// @ts-nocheck

// The request message containing the user's name.
export type HelloRequest = {
  name: string | undefined;
};

// The response message containing the greetings
export type HelloReply = {
  message: string | undefined;
};

// The greeting service definition.
export interface Greeter {
  // Sends a greeting
  SayHello(request: HelloRequest): Promise<HelloReply>;
}

type RequestType = {
  path: string;
  method: string;
  body: string | null;
};

type RequestHandler = (request: RequestType, meta: { service: string, method: string }) => Promise<unknown>;

export function createGreeterClient(
  handler: RequestHandler
): Greeter {
  return {
    SayHello(request) { // eslint-disable-line @typescript-eslint/no-unused-vars
      if (!request.name) {
        throw new Error("missing required field request.name");
      }
      const path = `helloworld/${request.name}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += `?${queryParams.join("&")}`
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }, {
        service: "Greeter",
        method: "SayHello",
      }) as Promise<HelloReply>;
    },
  };
}
export type ErrorReason =
  | "GREETER_UNSPECIFIED"
  | "USER_NOT_FOUND";

// @@protoc_insertion_point(typescript-http-eof)
